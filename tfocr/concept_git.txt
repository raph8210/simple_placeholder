
    Qu'est-ce qu'un commit;
    À quoi sert la commande git log;
    Qu'est-ce qu'une branche.

1. Qu'est ce qu'un commit ?

Git étant un système de versionnage du code, un commit est une fonction de git qui permet de notifier et de laisser une trace d'une modification sur le code. Par exemple, si je modifie 2,3 mots dans un fichier texte d'une dossier de code, j'utilise la fonction commit pour enregistrer cette modification et la commenter. Le commit permet de garde une trace de cette modification et de conserver des informations comme l'heure, la personne, l'identifiant unique de la modification... Le commit apparait aussi comme une étape dans le code dans le sens ou si parla suite notrez code n'est plus bon, nous pouvons revenir à l'état de ce commit.

2. A quoi sert la commande git log ?

La commande git log sert à afficher l'historique des commits effectués sur le fichier que l'on souhaite observé. Le log affiche les différents commit et les informations qui vont avec comme la date, l'heure, l'auteur du commit et l'ID du commmit (SHA).

Ci-dessous un exemple d'un log qui represente mes commits pour écrire ce fichier texte. On voit bien les différentes étapes, d'abord j'ai écris la question 1 et 2 puis fait un commit et enfin la question 3.

3. Qu'est ce qu'une branche ? 

Imaginons que nous travaillons sur un dossier de code appelé "code A principal", maintenant je ne veux pas toucher à ce code car je ne suis pas sur des modifications que je vais faire dessus ou encore car je vais faire une expérience sur ce code. Je vais donc créer une branche qui contiendra le même code 'Code A' mais sur lequel je vais pouvoir faire des modifications sans altérer le "code A principal". Je vais donc créer une branche "secondaire" et je pourrais alors travailler sur "code A secondaire". Si à la fin de mon expérience je m'aperçois que mon code est bon, je peux alors fusionner les branches et supprimer ma branche "secondaire".